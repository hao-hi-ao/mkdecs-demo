{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"about/","title":"About","text":""},{"location":"about/#me","title":"me","text":"<p>hao-hi-ao</p>"},{"location":"api/%E5%87%BD%E6%95%B0%E5%8F%82%E8%80%83/","title":"\u51fd\u6570\u53c2\u8003","text":""},{"location":"api/%E5%87%BD%E6%95%B0%E5%8F%82%E8%80%83/#1","title":"\u7b2c1\u7ae0 \u73a9\u5177\u603b\u52a8\u5458","text":""},{"location":"api/%E5%87%BD%E6%95%B0%E5%8F%82%E8%80%83/#car","title":"car","text":"<p>\u83b7\u53d6l\uff08list\uff0c\u975enull list\uff09\u7684\u7b2c1\u4e2aS-expression  </p> <pre><code>; (car list)\n(car l)\n</code></pre>"},{"location":"api/%E5%87%BD%E6%95%B0%E5%8F%82%E8%80%83/#cdr","title":"cdr","text":"<p>\u83b7\u53d6l\uff08list\uff0c\u975enull list\uff09\u6263\u9664<code>(car list)</code>\u7684\u90e8\u5206\uff0c\u4e5f\u662f\u4e00\u4e2alist  </p> <pre><code>; (cdr list)\n(cdr l)\n</code></pre>"},{"location":"api/%E5%87%BD%E6%95%B0%E5%8F%82%E8%80%83/#cons","title":"cons","text":"<p>\u6dfb\u52a0\u4e00\u4e2ax\uff08S-expression\uff09\u5230\u4e00\u4e2al\uff08list\uff09\u7684\u5f00\u5934\u5904\uff0c\u5e76\u8fd4\u56de\u65b0\u7684l</p> <pre><code>; (cons S-expression list)\n(cons x l)\n</code></pre>"},{"location":"api/%E5%87%BD%E6%95%B0%E5%8F%82%E8%80%83/#null","title":"null?","text":"<p>\u5224\u65adl\uff08list\uff09\u662f\u5426\u4e3anull list</p> <pre><code>; (null? list)\n(null? l)\n</code></pre>"},{"location":"api/%E5%87%BD%E6%95%B0%E5%8F%82%E8%80%83/#atom","title":"atom?","text":"<p>\u5224\u65adx\uff08S-expression\uff09\u662f\u5426\u4e3aatom</p> <pre><code>(define atom?\n  (lambda (x)\n    (and (not (pair? x))\n         (not (null? x)))))\n\n; (atom? S-expression)\n(atom x)\n</code></pre>"},{"location":"api/%E5%87%BD%E6%95%B0%E5%8F%82%E8%80%83/#eq","title":"eq?","text":"<p>\u5224\u65ad\u4e24\u4e2a\u539f\u5b50\uff08\u975e\u6570\u5b57\uff09a1\u548ca2\u662f\u5426\u76f8\u540c</p> <pre><code>; (eq? atom atom)\n(eq? a1 a2)\n</code></pre>"},{"location":"api/%E5%87%BD%E6%95%B0%E5%8F%82%E8%80%83/#2","title":"\u7b2c2\u7ae0 \u5904\u7406\uff0c\u5904\u7406\uff0c\u53cd\u590d\u5904\u7406\u2026\u2026","text":""},{"location":"api/%E5%87%BD%E6%95%B0%E5%8F%82%E8%80%83/#lat","title":"lat?","text":"<p>\u5224\u65adl\uff08list\uff09\u662f\u5426\u4e3alist of atom</p> <pre><code>(define lat?\n  (lambda (l)\n    (cond\n      ((null? l) #t)\n      (else\n       (and (atom? (car l))\n            (lat? (cdr l)))))))\n\n; (lat? list)\n(lat? l)\n</code></pre>"},{"location":"api/%E5%87%BD%E6%95%B0%E5%8F%82%E8%80%83/#member","title":"member?","text":"<p>\u5224\u65ada\uff08atom\uff09\u662f\u5426\u5728lat\uff08list of atom\uff09\u4e2d</p> <pre><code>(define member?\n  (lambda (a lat)\n    (cond\n      ((null? lat) #f)\n      (else\n       (or (eq? a (car lat))\n           (member? a (cdr lat)))))))\n\n; (member? atom list-of-atom)\n(member? a lat)\n</code></pre>"},{"location":"api/%E5%87%BD%E6%95%B0%E5%8F%82%E8%80%83/#3-cons","title":"\u7b2c3\u7ae0 \u7528cons\u6784\u7b51\u6062\u5b8f","text":""},{"location":"api/%E5%87%BD%E6%95%B0%E5%8F%82%E8%80%83/#rember","title":"rember","text":"<p>\u5220\u9664lat\uff08list of atom\uff09\u4e2d\u7684\u7b2c\u4e00\u4e2aa\uff08atom\uff09\uff0c\u5e76\u8fd4\u56de\u65b0\u7684lat\uff1b\u82e5lat\u4e2d\u6ca1\u6709a\uff0c\u5219lat\u4fdd\u6301\u539f\u6001\uff0c\u5e76\u8fd4\u56de\u65b0\u7684lat</p> <pre><code>(define rember\n  (lambda (a lat)\n    (cond\n      ((null? lat) `())\n      ((eq? a (car lat))\n       (cdr lat))\n      (else\n       (cons (car lat)\n             (rember a (cdr lat)))))))\n\n; (rember atom list-of-atom)\n(rember a lat)\n</code></pre>"},{"location":"api/%E5%87%BD%E6%95%B0%E5%8F%82%E8%80%83/#firsts","title":"firsts","text":"<p>\u83b7\u53d6l\uff08list\uff0c\u8fd9\u4e2alist\u8981\u4e48\u662fnull list\uff0c\u8981\u4e48\u53ea\u5305\u542b\u975enull list\uff09\u4e2d\u6bcf\u4e2a\u5185\u90e8list\u7684\u7b2c1\u4e2aS-expression\uff08\u5373<code>(car list)</code>\uff09\u6240\u6784\u6210\u7684list</p> <pre><code>(define firsts\n  (lambda (l)\n    (cond\n      ((null? l) `())\n      (else\n       (cons (car (car l))\n             (firsts (cdr l)))))))\n\n; (firsts list)\n(firsts l)\n</code></pre>"},{"location":"api/%E5%87%BD%E6%95%B0%E5%8F%82%E8%80%83/#insertr","title":"insertR","text":"<p>\u5728lat\uff08list of atom\uff09\u7684\u7b2c1\u4e2aold\uff08atom\uff09\u7684\u53f3\u8fb9\u63d2\u5165new\uff08atom\uff09\uff0c\u5e76\u8fd4\u56de\u65b0\u7684lat\uff1b\u82e5lat\u4e2d\u6ca1\u6709old\uff0c\u5219lat\u4fdd\u6301\u539f\u6001\uff0c\u5e76\u8fd4\u56de\u65b0\u7684lat</p> <pre><code>(define insertR\n  (lambda (new old lat)\n    (cond\n      ((null? lat) `())\n      ((eq? (car lat) old)\n       (cons old\n             (cons new (cdr lat))))\n      (else\n       (cons (car lat)\n             (insertR new old (cdr lat)))))))\n\n; (insertR atom atom list-of-atom)\n(insertR new old lat)\n</code></pre>"},{"location":"api/%E5%87%BD%E6%95%B0%E5%8F%82%E8%80%83/#insertl","title":"insertL","text":"<p>\u5728lat\uff08list of atom\uff09\u7684\u7b2c1\u4e2aold\uff08atom\uff09\u7684\u5de6\u8fb9\u63d2\u5165new\uff08atom\uff09\uff0c\u5e76\u8fd4\u56de\u65b0\u7684lat\uff1b\u82e5lat\u4e2d\u6ca1\u6709old\uff0c\u5219lat\u4fdd\u6301\u539f\u6001\uff0c\u5e76\u8fd4\u56de\u65b0\u7684lat</p> <pre><code>(define insertL\n  (lambda (new old lat)\n    (cond\n      ((null? lat) `())\n      ((eq? (car lat) old)\n       (cons new lat))\n      (else\n       (cons (car lat)\n             (insertL new old (cdr lat)))))))\n\n\n; (insertL atom atom list-of-atom)\n(insertL new old lat)\n</code></pre>"},{"location":"api/%E5%87%BD%E6%95%B0%E5%8F%82%E8%80%83/#subst","title":"subst","text":"<p>\u7528new\uff08atom\uff09\u4ee3\u66fflat\uff08list of atom\uff09\u4e2d\u7684\u9996\u4e2aold\uff08atom\uff09\uff0c\u5e76\u8fd4\u56de\u65b0\u7684lat\uff1b\u82e5lat\u4e2d\u6ca1\u6709old\uff0c\u5219lat\u4fdd\u6301\u539f\u6001\uff0c\u5e76\u8fd4\u56de\u65b0\u7684lat</p> <pre><code>(define subst\n  (lambda (new old lat)\n    (cond\n      ((null? lat) `())\n      ((eq? (car lat) old)\n       (cons new (cdr lat)))\n      (else\n       (cons (car lat)\n             (subst new old (cdr lat)))))))\n\n; (subst atom atom list-of-atom)\n(subst new old lat)\n</code></pre>"},{"location":"api/%E5%87%BD%E6%95%B0%E5%8F%82%E8%80%83/#subst2","title":"subst2","text":"<p>\u7528new\uff08atom\uff09\u4ee3\u66fflat\u4e2d\u7684\u9996\u4e2ao1\u6216\u9996\u4e2ao2\uff0c\u5e76\u8fd4\u56de\u65b0\u7684lat\uff1b\u82e5lat\u4e2d\u6ca1\u6709o1\u548co2\uff0c\u5219lat\u4fdd\u6301\u539f\u6001\uff0c\u5e76\u8fd4\u56de\u65b0\u7684lat</p> <pre><code>(define subst2\n  (lambda (new o1 o2 lat)\n    (cond\n      ((null? lat) `())\n      ((or (eq? (car lat) o1)\n           (eq? (car lat) o2))\n       (cons new (cdr lat)))\n      (else\n       (cons (car lat)\n             (subst2 new o1 o2 (cdr lat)))))))\n\n; (subst2 atom atom atom list-of-atom)\n(subst2 new o1 o2 lat)\n</code></pre>"},{"location":"api/%E5%87%BD%E6%95%B0%E5%8F%82%E8%80%83/#multirember","title":"multirember","text":"<p>\u8fd4\u56de\u79fb\u9664\u4e86\u6240\u6709a\uff08atom\uff09\u7684lat\uff08list of atom\uff09\uff1b\u82e5lat\u4e2d\u6ca1\u6709a\uff0c\u5219lat\u4fdd\u6301\u539f\u6001\uff0c\u5e76\u8fd4\u56de\u65b0\u7684lat</p> <pre><code>(define multirember\n  (lambda (a lat)\n    (cond\n      ((null? lat) `())\n      ((eq? (car lat) a)\n       (multirember a (cdr lat)))\n      (else\n       (cons (car lat)\n             (multirember a (cdr lat)))))))\n\n; (multirember atom list-of-atom)\n(multirember a lat)\n</code></pre>"},{"location":"api/%E5%87%BD%E6%95%B0%E5%8F%82%E8%80%83/#multiinsertr","title":"multiinsertR","text":"<p>\u5728lat\uff08list of atom\uff09\u4e2d\u6240\u6709\u7684old\uff08atom\uff09\u7684\u53f3\u8fb9\u90fd\u63d2\u5165new\uff08atom\uff09\uff0c\u5e76\u8fd4\u56de\u65b0\u7684lat\uff1b\u82e5lat\u4e2d\u6ca1\u6709old\uff0c\u5219lat\u4fdd\u6301\u539f\u6001\uff0c\u5e76\u8fd4\u56de\u65b0\u7684lat</p> <pre><code>(define multiinsertR\n  (lambda (new old lat)\n    (cond\n      ((null? lat) `())\n      ((eq? (car lat) old)\n       (cons old\n             (cons new\n                   (multiinsertR (cdr lat)))))\n      (else\n       (cons (car lat)\n             (multiinsertR new old (cdr lat)))))))\n\n; (multiinsertR atom atom list-of-atom)\n(multiinsertR new old lat)\n</code></pre>"},{"location":"api/%E5%87%BD%E6%95%B0%E5%8F%82%E8%80%83/#multiinsertl","title":"multiinsertL","text":"<p>\u5728lat\uff08list of atom\uff09\u4e2d\u6240\u6709\u7684old\uff08atom\uff09\u7684\u5de6\u8fb9\u90fd\u63d2\u5165new\uff08atom\uff09\uff0c\u5e76\u8fd4\u56de\u65b0\u7684lat\uff1b\u82e5lat\u4e2d\u6ca1\u6709old\uff0c\u5219lat\u4fdd\u6301\u539f\u6001\uff0c\u5e76\u8fd4\u56de\u65b0\u7684lat</p> <pre><code>(define multiinsertL\n  (lambda (new old lat) \n    (cond \n      ((null? lat) `())  \n      ((eq? (car lat) old) \n       (cons new\n             (cons old \n                   (multiinsertL new old (cdr lat))))) \n      (else\n       (cons (car lat)\n             (multiinsertL new old (cdr lat))))))) \n\n; (multiinsertL atom atom list-of-atom)\n(multiinsertL new old lat)\n</code></pre>"},{"location":"api/%E5%87%BD%E6%95%B0%E5%8F%82%E8%80%83/#multisubst","title":"multisubst","text":"<p>\u7528new\uff08atom\uff09\u4ee3\u66fflat\uff08list of atom\uff09\u4e2d\u7684\u6240\u6709old\uff08atom\uff09\uff0c\u5e76\u8fd4\u56de\u65b0\u7684lat\uff1b\u82e5lat\u4e2d\u6ca1\u6709old\uff0c\u5219lat\u4fdd\u6301\u539f\u6001\uff0c\u5e76\u8fd4\u56de\u65b0\u7684lat</p> <pre><code>(define multisubst\n  (lambda (new old lat)\n    (cond\n      ((null? lat) `())\n      ((eq? (car lat) old)\n       (cons new\n             (multisubst new old (cdr lat))))\n      (else\n       (cons (car lat)\n             (multisubst new old (cdr lat)))))))\n\n; (multisubst atom atom list-of-atom)\n(multisubst new old lat)\n</code></pre>"},{"location":"api/%E5%87%BD%E6%95%B0%E5%8F%82%E8%80%83/#4","title":"\u7b2c4\u7ae0 \u6570\u5b57\u6e38\u620f","text":""},{"location":"api/%E5%87%BD%E6%95%B0%E5%8F%82%E8%80%83/#add1","title":"add1","text":"<p>n\u52a01</p> <pre><code>(define add1\n  (lambda (n)\n    (+ n 1)))\n\n; (add1 natural-number)\n(add1 n)\n</code></pre>"},{"location":"api/%E5%87%BD%E6%95%B0%E5%8F%82%E8%80%83/#sub1","title":"sub1","text":"<p>n\u51cf1</p> <pre><code>(define sub1\n  (lambda (n)\n    (- n 1)))\n\n; (sub1 natural-number)\n(sub1 n)\n</code></pre>"},{"location":"api/%E5%87%BD%E6%95%B0%E5%8F%82%E8%80%83/#zero","title":"zero?","text":"<p>\u5224\u65adn\u662f\u5426\u4e3a0</p> <pre><code>; (zero? tatural-number)\n(zero? n)\n</code></pre>"},{"location":"api/%E5%87%BD%E6%95%B0%E5%8F%82%E8%80%83/#o","title":"o+","text":"<p>n\u52a0m</p> <pre><code>(define o+\n  (lambda (n m)\n    (cond\n      ((zero? m) n)\n      (else\n       (add1 (o+ n (sub1 m)))))))\n\n; (o+ natural-number natural-number)\n(o+ n m)\n</code></pre>"},{"location":"api/%E5%87%BD%E6%95%B0%E5%8F%82%E8%80%83/#o-","title":"o-","text":"<p>n\u51cfm</p> <pre><code>(define o-\n  (lambda (n m)\n    (cond\n      ((zero? m) n)\n      (else\n       (sub1 (o- n (sub1 m)))))))\n\n; (o- natural-number natural-number)\n(o- n m)\n</code></pre>"},{"location":"api/%E5%87%BD%E6%95%B0%E5%8F%82%E8%80%83/#addtup","title":"addtup","text":"<pre><code>; \u8ba1\u7b97tup\u7684\u603b\u548c\uff0c\u5f53tup\u4e3anull list\u65f6\uff0c\u603b\u548c\u4e3a0\n; (addtup tup)\n; (addtup tup)\n(define addtup\n  (lambda (tup)\n    (cond\n      ((null? tup) 0)\n      (else\n       (o+ (car tup)\n           (addtup (cdr tup)))))))\n</code></pre>"},{"location":"api/%E5%87%BD%E6%95%B0%E5%8F%82%E8%80%83/#o_1","title":"o*","text":"<pre><code>; n\u4e58m\n; (o* n m)\n; (o* natural-number natural-number)\n; (o* 1 2) -&gt; 2 \n(define o*\n  (lambda (n m)\n    (cond\n      ((zero? m) 0)\n      (else\n       (o+ n (o* n (sub1 m)))))))\n</code></pre>"},{"location":"api/%E5%87%BD%E6%95%B0%E5%8F%82%E8%80%83/#tup","title":"tup+","text":"<pre><code>; tup1\u5185\u7684\u4e2a\u4e2anatural-number\u4e0etup2\u5bf9\u5e94\u4f4d\u7f6e\u7684natural-number\u76f8\u52a0\uff1b\u82e5tup1\u4e0etup2\u957f\u5ea6\u4e0d\u540c\uff0c\u5219\u8f83\u957f\u7684tup\u7684\u5269\u4f59\u90e8\u5206\u4fdd\u6301\u539f\u6001\n; C\uff1a(tup+ tup1 tup2)\n; T\uff1a(tup+ tup tup)\n; E\uff1a(tup+ `(1 2 3) `(1 2 3)) -&gt; `(2 4 6)\n;  \uff1a(tup+ `(2 1 5 4) `(1 2 3)) -&gt; `(3 3 8 4)\n(define tup+\n  (lambda (tup1 tup2)\n    (cond\n      ((null? tup1) tup2)\n      ((null? tup2) tup1)\n      (else\n       (cons (o+ (car tup1) (car tup2))\n             (tup+ (cdr tup1) (cdr tup2)))))))\n</code></pre>"},{"location":"api/%E5%87%BD%E6%95%B0%E5%8F%82%E8%80%83/#o_2","title":"o&gt;","text":"<pre><code>; \u5224\u65adn\u662f\u5426\u5927\u4e8em\n; C\uff1a(o&gt; n m)\n; T\uff1a(o&gt; n[natural-number] m[natural-number]) -&gt; boolean\n; E\uff1a(o&gt; 1 2) -&gt; #f\n;  \uff1a(o&gt; 4 2) -&gt; #t\n(define o&gt;\n  (lambda (n m)\n    (cond\n      ((zero? n) #f)\n      ((zero? m) #t)\n      (else\n       (o&gt; (sub1 n) (sub1 m))))))\n</code></pre>"},{"location":"api/%E5%87%BD%E6%95%B0%E5%8F%82%E8%80%83/#o_3","title":"o&lt;","text":"<pre><code>; \u5224\u65adn\u662f\u5426\u5c0f\u4e8em\n; C\uff1a(o&lt; n m)\n; T\uff1a(o&lt; n[natural-number] m[natural-number]) -&gt; boolean\n; E\uff1a(o&lt; 1 2) -&gt; #t\n;  \uff1a(o&lt; 4 2) -&gt; #f\n(define o&lt;\n  (lambda (n m)\n    (cond\n      ((zero? m) #f)\n      ((zero? n) #t)\n      (else\n       (o&lt; (sub1 n) (sub1 m))))))\n</code></pre>"},{"location":"api/%E5%87%BD%E6%95%B0%E5%8F%82%E8%80%83/#o_4","title":"o=","text":"<pre><code>; \u5224\u65adn\u662f\u5426\u7b49\u4e8em\n; C\uff1a(o= n m)\n; T\uff1a(o= n[natural-number] m[natural-number]) -&gt; boolean\n; E\uff1a(o= 2 2) -&gt; #t\n;  \uff1a(o= 4 2) -&gt; #f\n(define o=\n  (lambda (n m)\n    (cond\n      ((or (o&gt; n m)\n           (o&lt; n m))\n       #f)\n      (else #t))))\n</code></pre>"},{"location":"api/%E5%87%BD%E6%95%B0%E5%8F%82%E8%80%83/#_2","title":"\u2191","text":"<pre><code>; \u5224\u65adn\u662f\u5426\u7b49\u4e8em\n; C\uff1a(o= n m)\n; T\uff1a(o= n[natural-number] m[natural-number]) -&gt; boolean\n; E\uff1a(o= 2 2) -&gt; #t\n;  \uff1a(o= 4 2) -&gt; #f\n(define o=\n  (lambda (n m)\n    (cond\n      ((or (o&gt; n m)\n           (o&lt; n m))\n       #f)\n      (else #t))))\n</code></pre>"},{"location":"api/%E5%87%BD%E6%95%B0%E5%8F%82%E8%80%83/#o_5","title":"o/","text":"<pre><code>; C\uff1a(o/ n m)\n; T\uff1a(o/ n[natural-number] m[natural-number]) -&gt; natural-number\n; I\uff1a\u6c42n\u9664\u4ee5m\u7684\u5546\n; E\uff1a(o/ 4 2) -&gt; 2\n;  \uff1a(o/ 5 2) -&gt; 2\n(define o/\n  (lambda (n m)\n    (cond\n      ((o&lt; n m) 0)\n      (else\n       (add1 (o/ (o- n m) m))))))\n</code></pre>"},{"location":"api/%E6%A6%82%E5%BF%B5%E5%8F%82%E8%80%83/","title":"\u6982\u5ff5\u53c2\u8003","text":""},{"location":"api/%E6%A6%82%E5%BF%B5%E5%8F%82%E8%80%83/#1","title":"\u7b2c1\u7ae0 \u73a9\u5177\u603b\u52a8\u5458","text":""},{"location":"api/%E6%A6%82%E5%BF%B5%E5%8F%82%E8%80%83/#atom","title":"atom","text":"<p>\u4e00\u4e2a\u5b57\u7b26\u4e32\uff08\u4e0d\u80fd\u4ee5'('\u548c')'\u5de6\u53f3\u5706\u62ec\u53f7\u5f00\u5934\uff09\u6216\u4e00\u4e2a\u6570\u5b57  </p> <pre><code>`atom\n`turkey\n`1492\n`u\n`*abc$\n10\n12\n</code></pre>"},{"location":"api/%E6%A6%82%E5%BF%B5%E5%8F%82%E8%80%83/#list","title":"list","text":"<p>\u7528\u62ec\u53f7\u62ec\u8d77\u6765\u7684atom\u96c6\u5408\u6216list\u96c6\u5408\u6216\u4e24\u8005\u517c\u6709  </p> <pre><code>`(atom)\n`(atom turkey or)\n`((atom turkey) or)\n</code></pre>"},{"location":"api/%E6%A6%82%E5%BF%B5%E5%8F%82%E8%80%83/#null-listempty-list","title":"null list/empty list","text":"<p>\u62ec\u53f7\u5185\u6ca1\u6709\u5143\u7d20  </p> <pre><code>`()\n</code></pre>"},{"location":"api/%E6%A6%82%E5%BF%B5%E5%8F%82%E8%80%83/#s-expression","title":"S-expression","text":"<p>atom\u548clist\u90fd\u662fS-expression  </p> <pre><code>`xyz\n`(x y z)\n`((x y) z)\n</code></pre>"},{"location":"api/%E6%A6%82%E5%BF%B5%E5%8F%82%E8%80%83/#2","title":"\u7b2c2\u7ae0 \u5904\u7406\uff0c\u5904\u7406\uff0c\u53cd\u590d\u5904\u7406\u2026\u2026","text":""},{"location":"api/%E6%A6%82%E5%BF%B5%E5%8F%82%E8%80%83/#latlist-of-atom","title":"lat\uff08list of atom\uff09","text":"<p>list\u4e2d\u7684\u6bcf\u4e2aS-expression\u90fd\u662f\u539f\u5b50\uff0clat\u5305\u62ecnull list  </p> <pre><code>`()\n`(1 2 3)\n`(x y z)\n`(1 x 2 y 3 z)\n</code></pre>"},{"location":"api/%E6%A6%82%E5%BF%B5%E5%8F%82%E8%80%83/#3-cons","title":"\u7b2c3\u7ae0 \u7528cons\u6784\u7b51\u6062\u5b8f","text":""},{"location":"api/%E6%A6%82%E5%BF%B5%E5%8F%82%E8%80%83/#4","title":"\u7b2c4\u7ae0 \u6570\u5b57\u6e38\u620f","text":""},{"location":"api/%E6%A6%82%E5%BF%B5%E5%8F%82%E8%80%83/#number","title":"number","text":"<p>\u6570\u5b57</p> <pre><code>14\n-3\n3.14159\n</code></pre>"},{"location":"api/%E6%A6%82%E5%BF%B5%E5%8F%82%E8%80%83/#natural-number","title":"natural number","text":"<p>\u81ea\u7136\u6570\uff080\u548c\u6b63\u6574\u6570\uff09</p> <pre><code>0\n67\n5\n</code></pre>"},{"location":"api/%E6%A6%82%E5%BF%B5%E5%8F%82%E8%80%83/#tuptuple","title":"tup\uff08tuple\uff09","text":"<p>\u53ea\u6709natural-number\u7684lat\u3002</p> <pre><code>`()\n`(1)\n`(0 2 3)\n</code></pre>"}]}